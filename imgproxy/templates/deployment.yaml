apiVersion: {{ .Values.apiVersion }}
kind: Deployment
metadata:
  name: {{ template "imgproxy.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    app: {{ template "imgproxy.fullname" . }}
  annotations: {{ .Values.deployment.annotations | toYaml | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "imgproxy.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "imgproxy.fullname" . }}
        release: {{ .Release.Name | quote }}
      annotations: {{ .Values.pod.annotations | toYaml | nindent 8 }}
    spec:
      affinity: {{ .Values.affinity | toYaml | nindent 8 }}
      tolerations: {{ .Values.tolerations | toYaml | nindent 8 }}
      nodeSelector: {{ .Values.nodeSelector | toYaml | nindent 8 }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: "{{ .Release.Name }}-docker-registry-secret"
      {{- end }}
      containers:
        - name: "imgproxy"
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ template "imgproxy.fullname" . }}-env-secrets
          resources: {{ .Values.resources | toYaml | nindent 16 }}
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            {{- if .Values.features.prometheus.enabled }}
            - containerPort: 8081
              name: metrics
              protocol: TCP
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.features.server.pathPrefix }}/health
              port: 8080
              scheme: HTTP
              {{- if .Values.features.security.secret }}
              httpHeaders:
              - name: Authorization
                value: Bearer {{ .Values.features.security.secret }}
              {{- end }}
            {{- with .Values.readinessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 10 }}
            timeoutSeconds: {{ .timeoutSeconds | default 5 }}
            successThreshold: {{ .successThreshold | default 1 }}
            failureThreshold: {{ .failureThreshold | default 5 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.features.server.pathPrefix }}/health
              port: 8080
              scheme: HTTP
              {{- if .Values.features.security.secret }}
              httpHeaders:
                - name: Authorization
                  value: Bearer {{ .Values.features.security.secret }}
              {{- end }}
            {{- with .Values.livenessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 50 }}
            timeoutSeconds: {{ .timeoutSeconds | default 5 }}
            successThreshold: {{ .successThreshold | default 1 }}
            failureThreshold: {{ .failureThreshold | default 5 }}
            {{- end }}
