apiVersion: {{ .Values.apiVersion }}
kind: Deployment
metadata:
  name: {{ template "imgproxy.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    app: {{ template "imgproxy.fullname" . }}
  {{- if .Values.deployment.annotations }}
  annotations:
    {{ toYaml .Values.deployment.annotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "imgproxy.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "imgproxy.fullname" . }}
        release: {{ .Release.Name | quote }}
{{- if .Values.annotations }}
      annotations:
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
{{- end }}
    spec:
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: "{{ .Release.Name }}-docker-registry-secret"
{{- end }}
      containers:
      - name: "imgproxy"
        image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: IMGPROXY_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: key
        - name: IMGPROXY_SALT
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: salt
        - name: IMGPROXY_SIGNATURE_SIZE
          value: {{ .Values.signatureSize | quote }}
        - name: IMGPROXY_READ_TIMEOUT
          value: {{ .Values.readTimeout | quote }}
        - name: IMGPROXY_WRITE_TIMEOUT
          value: {{ .Values.writeTimeout | quote }}
        - name: IMGPROXY_KEEP_ALIVE_TIMEOUT
          value: {{ .Values.keepAliveTimeout | quote }}
        - name: IMGPROXY_DOWNLOAD_TIMEOUT
          value: {{ .Values.downloadTimeout | quote }}
        {{- if .Values.concurrency }}
        - name: IMGPROXY_CONCURRENCY
          value: {{ .Values.concurrency | quote }}
        {{- end }}
        {{- if .Values.maxClients }}
        - name: IMGPROXY_MAX_CLIENTS
          value: {{ .Values.maxClients | quote }}
        {{- end }}
        - name: IMGPROXY_TTL
          value: {{ .Values.ttl | quote }}
        {{- if .Values.cacheControlPassthrough }}
        - name: IMGPROXY_CACHE_CONTROL_PASSTHROUGH
          value: "true"
        {{- end }}
        {{- if .Values.soReuseport }}
        - name: IMGPROXY_SO_REUSEPORT
          value: "true"
        {{- end }}
        {{- if .Values.pathPrefix }}
        - name: IMGPROXY_PATH_PREFIX
          value: {{ .Values.pathPrefix | quote }}
        {{- end }}
        {{- if .Values.userAgent }}
        - name: IMGPROXY_USER_AGENT
          value: {{ .Values.userAgent | quote }}
        {{- end }}
        {{- if .Values.useEtag }}
        - name: IMGPROXY_USE_ETAG
          value: "true"
        {{- end }}
        {{- if .Values.customRequestHeaders }}
        - name: IMGPROXY_CUSTOM_REQUEST_HEADERS
          value: {{ .Values.customRequestHeaders | quote }}
        {{- end }}
        {{- if .Values.customResponseHeaders }}
        - name: IMGPROXY_CUSTOM_RESPONSE_HEADERS
          value: {{ .Values.customResponseHeaders | quote }}
        {{- end }}
        {{- if .Values.customHeadersSeparator }}
        - name: IMGPROXY_CUSTOM_HEADERS_SEPARATOR
          value: {{ .Values.customHeadersSeparator | quote }}
        {{- end }}
        {{- if .Values.localFileSystemRoot }}
        - name: IMGPROXY_LOCAL_FILESYSTEM_ROOT
          value: {{ .Values.localFileSystemRoot | quote}}
        {{- end }}
        - name: IMGPROXY_MAX_SRC_RESOLUTION
          value: {{ .Values.maxSrcResolution | quote }}
        - name: IMGPROXY_MAX_SRC_FILE_SIZE
          value: {{ .Values.maxSrcFileSize | quote }}
        - name: IMGPROXY_MAX_ANIMATION_FRAMES
          value: {{ .Values.maxAnimationFrames | quote }}
        {{- if .Values.secret }}
        - name: IMGPROXY_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: secret
        {{- end }}
        {{- if .Values.allowOrigin }}
        - name: IMGPROXY_ALLOW_ORIGIN
          value: {{ .Values.allowOrigin | quote }}
        {{- end }}
        {{- if .Values.allowedSources }}
        - name: IMGPROXY_ALLOWED_SOURCES
          value: {{ .Values.allowedSources | quote }}
        {{- end }}
        {{- if .Values.ignoreSslVerification}}
        - name: IMGPROXY_IGNORE_SSL_VERIFICATION
          value: "true"
        {{- end }}
        {{- if .Values.developmentErrorsMode }}
        - name: IMGPROXY_DEVELOPMENT_ERRORS_MODE
          value: "true"
        {{- end }}
        - name: IMGPROXY_QUALITY
          value: {{ .Values.quality | quote }}
        - name: IMGPROXY_GZIP_COMPRESSION
          value: {{ .Values.gzipCompression | quote }}
        {{- if .Values.jpegProgressive}}
        - name: IMGPROXY_JPEG_PROGRESSIVE
          value: "true"
        {{- end }}
        {{- if .Values.jpegNoSubsample }}
        - name: IMGPROXY_JPEG_NO_SUBSAMPLE
          value: "true"
        {{- end }}
        {{- if .Values.jpegTrellisQuant }}
        - name: IMGPROXY_JPEG_TRELLIS_QUANT
          value: "true"
        {{- end }}
        {{- if .Values.jpegOvershootDeringing }}
        - name: IMGPROXY_JPEG_OVERSHOOT_DERINGING
          value: "true"
        {{- end }}
        {{- if .Values.jpegOptimizeScans }}
        - name: IMGPROXY_JPEG_OPTIMIZE_SCANS
          value: "true"
        {{- end }}
        {{- if .Values.jpegQuantTable }}
        - name: IMGPROXY_JPEG_QUANT_TABLE
          value: {{ .Values.jpegQuantTable | quote }}
        {{- end }}
        {{- if .Values.pngInterlaced }}
        - name: IMGPROXY_PNG_INTERLACED
          value: "true"
        {{- end }}
        {{- if .Values.pngQuantize }}
        - name: IMGPROXY_PNG_QUANTIZE
          value: "true"
        {{- end }}
        - name: IMGPROXY_PNG_QUANTIZATION_COLORS
          value: {{ .Values.pngQuantizationColors | quote }}
        {{- if .Values.gifOptimizeFrames }}
        - name: IMGPROXY_GIF_OPTIMIZE_FRAMES
          value: "true"
        {{- end }}
        {{- if .Values.gifOptimizeTransparency }}
        - name: IMGPROXY_GIF_OPTIMIZE_TRANSPARENCY
          value: "true"
        {{- end }}
        {{- if .Values.enableWebpDetection }}
        - name: IMGPROXY_ENABLE_WEBP_DETECTION
          value: "true"
        {{- end }}
        {{- if .Values.enforceWebp }}
        - name: IMGPROXY_ENFORCE_WEBP
          value: "true"
        {{- end }}
        {{- if .Values.enableClientHints }}
        - name: IMGPROXY_ENABLE_CLIENT_HINTS
          value: "true"
        {{- end }}
        {{- if .Values.enableVideoThumbnails }}
        - name: IMGPROXY_ENABLE_VIDEO_THUMBNAILS
          value: "true"
        {{- end }}
        - name: IMGPROXY_VIDEO_THUMBNAIL_PROBE_SIZE
          value: {{ .Values.videoThumbnailProbeSize | quote }}
        - name: IMGPROXY_VIDEO_THUMBNAIL_MAX_ANALYZE_DURATION
          value: {{ .Values.videoThumbnailMaxAnalyzeDuration | quote }}
        - name: IMGPROXY_VIDEO_THUMBNAIL_SECOND
          value: {{ .Values.videoThumbnailSecond | quote }}
        {{- if .Values.watermarkData }}
        - name: IMGPROXY_WATERMARK_DATA
          value: {{ .Values.watermarkData | quote }}
        {{- end }}
        {{- if .Values.watermarkPath }}
        - name: IMGPROXY_WATERMARK_PATH
          value: {{ .Values.watermarkPath | quote }}
        {{- end }}
        {{- if .Values.watermarkUrl }}
        - name: IMGPROXY_WATERMARK_URL
          value: {{ .Values.watermarkUrl | quote }}
        {{- end }}
        - name: IMGPROXY_WATERMARK_OPACITY
          value: {{ .Values.watermarkOpacity | quote }}
        - name: IMGPROXY_WATERMARK_CACHE_SIZE
          value: {{ .Values.watermarkCacheSize | quote }}
        {{- if .Values.fallbackImageData }}
        - name: IMGPROXY_FALLBACK_IMAGE_DATA
          value: {{ .Values.fallbackImageData | quote }}
        {{- end }}
        {{- if .Values.fallbackImagePath }}
        - name: IMGPROXY_FALLBACK_IMAGE_PATH
          value: {{ .Values.fallbackImagePath | quote }}
        {{- end }}
        {{- if .Values.fallbackImageUrl }}
        - name: IMGPROXY_FALLBACK_IMAGE_URL
          value: {{ .Values.fallbackImageUrl | quote }}
        {{- end }}
        {{- if .Values.presets }}
        - name: IMGPROXY_PRESETS
          value: {{ .Values.presets | quote }}
        {{- end }}
        {{- if .Values.onlyPresets }}
        - name: IMGPROXY_ONLY_PRESETS
          value: "true"
        {{- end }}

        {{- if .Values.useS3 }}
        - name: IMGPROXY_USE_S3
          value: "true"
        {{- if .Values.awsKey }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: awsKey
        {{- end }}
        {{- if .Values.awsSecret }}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: awsSecret
        {{- end }}
        - name: IMGPROXY_S3_REGION
          value: {{ .Values.awsRegion | quote }}
        - name: IMGPROXY_S3_ENDPOINT
          value: {{ .Values.s3Endpoint | quote }}
        {{- end }}

        {{- if .Values.useGcs }}
        - name: IMGPROXY_USE_GCS
          value: "true"
        {{- end }}
        {{- if .Values.gcsKey }}
        - name: IMGPROXY_GCS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: gcsKey
        {{- end }}

        {{- if .Values.newRelicKey }}
        - name: IMGPROXY_NEW_RELIC_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: newRelicKey
        - name: IMGPROXY_NEW_RELIC_APP_NAME
          value: {{ .Values.newRelicAppName | quote }}
        {{- end }}

        {{- if .Values.enablePrometheus }}
        - name: IMGPROXY_PROMETHEUS_BIND
          value: ":8081"
        - name: IMGPROXY_PROMETHEUS_NAMESPACE
          value: {{ .Values.prometheusNamespace | quote }}
        {{- end }}

        {{- if .Values.bugsnagKey }}
        - name: IMGPROXY_BUGSNAG_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: bugsnagKey
        - name: IMGPROXY_BUGSNAG_STAGE
          value: {{ .Values.bugsnagStage | quote }}
        {{- end }}

        {{- if .Values.honeybadgerKey }}
        - name: IMGPROXY_HONEYBADGER_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: honeybadgerKey
        - name: IMGPROXY_HONEYBADGER_ENV
          value: {{ .Values.honeybadgerEnv | quote }}
        {{- end }}

        {{- if .Values.sentryDsn }}
        - name: IMGPROXY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: {{ template "imgproxy.fullname" . }}-secrets
              key: sentryDsn
        - name: IMGPROXY_SENTRY_ENVIRONMENT
          value: {{ .Values.sentryEnvironment | quote }}
        {{- if .Values.sentryRelease }}
        - name: IMGPROXY_SENTRY_RELEASE
          value: {{ .Values.sentryRelease | quote }}
        {{- end }}
        {{- end }}

        {{- if .Values.reportDownloadingErrors }}
        - name: IMGPROXY_REPORT_DOWNLOADING_ERRORS
          value: "true"
        {{- end }}

        - name: IMGPROXY_LOG_FORMAT
          value: {{ .Values.logFormat | quote }}
        - name: IMGPROXY_LOG_LEVEL
          value: {{ .Values.logLevel | quote }}
        {{- if .Values.syslogEnable }}
        - name: IMGPROXY_SYSLOG_ENABLE
          value: "true"
        - name: IMGPROXY_SYSLOG_LEVEL
          value: {{ .Values.syslogLevel | quote }}
        - name: IMGPROXY_SYSLOG_NETWORK
          value: {{ .Values.syslogNetwork | quote }}
        {{- if .Values.syslogAddress }}
        - name: IMGPROXY_SYSLOG_ADDRESS
          value: {{ .Values.syslogAddress | quote }}
        {{- end }}
        - name: IMGPROXY_SYSLOG_TAG
          value: {{ .Values.syslogTag | quote }}
        {{- end }}

        - name: IMGPROXY_DOWNLOAD_BUFFER_SIZE
          value: {{ .Values.downloadBufferSize | quote }}
        - name: IMGPROXY_GZIP_BUFFER_SIZE
          value: {{ .Values.gzipBufferSize | quote }}
        - name: IMGPROXY_FREE_MEMORY_INTERVAL
          value: {{ .Values.freeMemoryInterval | quote }}
        - name: IMGPROXY_BUFFER_POOL_CALIBRATION_THRESHOLD
          value: {{ .Values.bufferPoolCalibrationThreshold | quote }}

        {{- if .Values.baseUrl }}
        - name: IMGPROXY_BASE_URL
          value: {{ .Values.baseUrl | quote }}
        {{- end }}
        {{- if .Values.useLinearColorspace }}
        - name: IMGPROXY_USE_LINEAR_COLORSPACE
          value: "true"
        {{- end }}
        {{- if .Values.disableShrinkOnLoad }}
        - name: IMGPROXY_DISABLE_SHRINK_ON_LOAD
          value: "true"
        {{- end }}
        {{- if .Values.applyUnsharpenMasking }}
        - name: IMGPROXY_APPLY_UNSHARPEN_MASKING
          value: "true"
        {{- end }}
        {{- if .Values.stripMetadata }}
        - name: IMGPROXY_STRIP_METADATA
          value: "true"
        {{- end }}

        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        {{- if .Values.enablePrometheus }}
        - containerPort: 8081
          name: metrics
          protocol: TCP
        {{- end }}
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Bearer {{ .Values.secret }}
          {{- with .Values.readinessProbe }}
          initialDelaySeconds: {{ .initialDelaySeconds | default 10 }}
          timeoutSeconds: {{ .timeoutSeconds | default 5}}
          successThreshold: {{ .successThreshold | default 1 }}
          failureThreshold: {{ .failureThreshold | default 5 }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
            httpHeaders:
            - name: Authorization
              value: Bearer {{ .Values.secret }}
          {{- with .Values.livenessProbe }}
          initialDelaySeconds: {{ .initialDelaySeconds | default 50 }}
          timeoutSeconds: {{ .timeoutSeconds | default 5}}
          successThreshold: {{ .successThreshold | default 1 }}
          failureThreshold: {{ .failureThreshold | default 5 }}
          {{- end }}
